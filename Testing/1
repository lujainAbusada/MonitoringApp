import unittest
from unittest import mock
import sys
sys.path.insert(0, '/MonitoringApp/Application')
import Statistics
from datetime import datetime

dbc = mock.MagicMock(spec=['cursor'])
now = datetime.now()
current_time = now.strftime("%H:%M:%S")
dbc.autocommit = True        

def test_insert_rows_calls_executemany_and_commit_passing_correct_arguments():     
            
    Statistics.CPU_Usage(dbc);
    with dbc.cursor() as cursor:
        expect_sql = "INSERT INTO CPU(Utilization,time) VALUES(%s,%s)"
        CPU_data = (1,current_time)
        calls = [mock.call.executemany(expect_sql, CPU_data),
                 mock.call.commit(),]
        cursor.assert_has_calls(calls)
        self.assertTrue(dbc.autocommit)

test_insert_rows_calls_executemany_and_commit_passing_correct_arguments()
